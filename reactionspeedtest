import React, { useState, useEffect, useCallback } from 'react';
import { Card } from '@/components/ui/card';
import { Github, Trophy, Clock, Target } from 'lucide-react';

const GameBackground = () => (
  <div className="absolute inset-0 overflow-hidden">
    <div className="absolute inset-0 bg-gradient-to-br from-blue-50 to-purple-50" />
    <div className="absolute inset-0" style={{ 
      backgroundImage: `radial-gradient(circle at 25px 25px, rgba(0, 0, 255, 0.1) 2%, transparent 0%), 
                       radial-gradient(circle at 75px 75px, rgba(128, 0, 255, 0.1) 2%, transparent 0%)`,
      backgroundSize: '100px 100px',
     }} />
  </div>
);

const getRankInfo = (score, averageReactionTime) => {
  let rank, description;
  
  if (score >= 45) {
    rank = 'S';
    description = 'Superhuman reflexes! Professional level!';
  } else if (score >= 35) {
    rank = 'A';
    description = 'Amazing! Your reaction speed is exceptional!';
  } else if (score >= 25) {
    rank = 'B';
    description = 'Great score! Keep it up!';
  } else if (score >= 15) {
    rank = 'C';
    description = 'Good foundation, room for improvement.';
  } else {
    rank = 'D';
    description = 'Practice makes perfect!';
  }

  if (averageReactionTime < 500 && rank !== 'S') {
    rank = String.fromCharCode(rank.charCodeAt(0) - 1);
  } else if (averageReactionTime > 1000 && rank !== 'D') {
    rank = String.fromCharCode(rank.charCodeAt(0) + 1);
  }

  const rankColors = {
    'S': 'bg-purple-500',
    'A': 'bg-red-500',
    'B': 'bg-blue-500',
    'C': 'bg-green-500',
    'D': 'bg-gray-500'
  };

  return {
    rank,
    description,
    color: rankColors[rank]
  };
};

const SpeedTestGame = () => {
  const [gameState, setGameState] = useState('ready');
  const [targets, setTargets] = useState([]);
  const [score, setScore] = useState(0);
  const [timeLeft, setTimeLeft] = useState(30);
  const [clickCount, setClickCount] = useState(0);
  const [gameStats, setGameStats] = useState(null);
  
  const generateTarget = useCallback(() => {
    const x = Math.floor(Math.random() * 80);
    const y = Math.floor(Math.random() * 80);
    return {
      id: Date.now(),
      x,
      y,
    };
  }, []);

  const startGame = () => {
    setGameState('playing');
    setScore(0);
    setTimeLeft(30);
    setClickCount(0);
    setGameStats(null);
    setTargets([generateTarget()]);
  };

  const handleTargetClick = (targetId) => {
    if (gameState !== 'playing') return;
    
    setClickCount(prev => prev + 1);
    setScore(prev => prev + 1);
    setTargets(prev => {
      const remaining = prev.filter(t => t.id !== targetId);
      return [...remaining, generateTarget()];
    });
  };

  useEffect(() => {
    let timer;
    if (gameState === 'playing') {
      timer = setInterval(() => {
        setTimeLeft(prev => {
          if (prev <= 1) {
            setGameState('finished');
            return 0;
          }
          return prev - 1;
        });
      }, 1000);
    }
    return () => clearInterval(timer);
  }, [gameState]);

  useEffect(() => {
    if (gameState === 'finished' && clickCount > 0) {
      const averageReactionTime = (30 * 1000) / clickCount;
      const stats = {
        score,
        averageReactionTime,
        ...getRankInfo(score, averageReactionTime)
      };
      setGameStats(stats);
    }
  }, [gameState, score, clickCount]);

  return (
    <Card className="w-full max-w-xl mx-auto relative overflow-hidden">
      <div className="relative p-6 z-10">
        <div className="mb-4 flex justify-between bg-white/80 backdrop-blur-sm rounded-lg p-3 shadow-sm">
          <div className="flex items-center space-x-2">
            <Trophy className="h-5 w-5 text-yellow-500" />
            <span className="font-semibold">Score: {score}</span>
          </div>
          <div className="flex items-center space-x-2">
            <Clock className="h-5 w-5 text-blue-500" />
            <span className="font-semibold">Time Left: {timeLeft}s</span>
          </div>
        </div>
        
        <div className="relative w-full h-96 bg-white/40 backdrop-blur-sm rounded-lg mb-4 border border-white/50 shadow-lg">
          {targets.map(target => (
            <button
              key={target.id}
              className="absolute w-8 h-8 bg-blue-500 rounded-full hover:bg-blue-600 transition-colors shadow-lg hover:shadow-xl transform hover:scale-105 transition-all"
              style={{
                left: `${target.x}%`,
                top: `${target.y}%`,
                transform: 'translate(-50%, -50%)'
              }}
              onClick={() => handleTargetClick(target.id)}
            />
          ))}
        </div>

        {gameState === 'ready' && (
          <button 
            className="w-full bg-blue-500 text-white py-3 px-4 rounded-lg hover:bg-blue-600 transition-colors shadow-lg hover:shadow-xl transform hover:scale-105 transition-all font-semibold"
            onClick={startGame}
          >
            Start Game
          </button>
        )}

        {gameState === 'finished' && gameStats && (
          <div className="text-center space-y-4 bg-white/80 backdrop-blur-sm rounded-lg p-6">
            <div className="flex justify-center mb-6">
              <div className={`${gameStats.color} text-white text-4xl font-bold w-16 h-16 rounded-full flex items-center justify-center shadow-lg transform hover:scale-110 transition-transform`}>
                {gameStats.rank}
              </div>
            </div>
            <div className="space-y-2">
              <p className="text-xl font-bold">Game Over!</p>
              <div className="flex justify-center space-x-8">
                <div className="flex items-center space-x-2">
                  <Trophy className="h-5 w-5 text-yellow-500" />
                  <span className="font-semibold">Total Score: {gameStats.score}</span>
                </div>
                <div className="flex items-center space-x-2">
                  <Clock className="h-5 w-5 text-blue-500" />
                  <span className="font-semibold">Avg. Reaction: {gameStats.averageReactionTime.toFixed(0)}ms</span>
                </div>
              </div>
              <p className="text-lg text-gray-600 mt-2">{gameStats.description}</p>
            </div>
            <button 
              className="bg-blue-500 text-white py-2 px-6 rounded-lg hover:bg-blue-600 transition-colors shadow-lg hover:shadow-xl transform hover:scale-105 transition-all font-semibold"
              onClick={startGame}
            >
              Play Again
            </button>
          </div>
        )}
      </div>
      
      <GameBackground />
    </Card>
  );
};

const WebsiteLayout = () => {
  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
      <nav className="bg-white/80 backdrop-blur-sm shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16 items-center">
            <div className="flex items-center">
              <Target className="h-6 w-6 mr-2 text-blue-500" />
              <span className="text-xl font-bold text-gray-900">Reaction Speed Test</span>
            </div>
            <div className="flex items-center space-x-4">
              <a
                href="https://github.com"
                target="_blank"
                rel="noopener noreferrer"
                className="text-gray-500 hover:text-gray-700"
              >
                <Github className="h-6 w-6" />
              </a>
            </div>
          </div>
        </div>
      </nav>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="space-y-8">
          <section className="text-center">
            <h1 className="text-3xl font-bold text-gray-900 mb-4">
              Test Your Reaction Speed!
            </h1>
            <p className="text-gray-600 max-w-2xl mx-auto">
              Click the blue dots as they appear to test your reaction speed. 
              You have 30 seconds - how many can you hit? The faster you click, the higher your score!
            </p>
          </section>

          <SpeedTestGame />

          <div className="grid md:grid-cols-2 gap-6 max-w-4xl mx-auto">
            <section className="bg-white/80 backdrop-blur-sm rounded-lg shadow p-6">
              <h2 className="text-xl font-semibold text-gray-900 mb-4">
                Game Rules
              </h2>
              <ul className="space-y-2 text-gray-600 list-disc pl-5">
                <li>Game duration: 30 seconds</li>
                <li>Click blue dots to score points</li>
                <li>Dots appear in random locations after each click</li>
                <li>Final score and average reaction time shown at the end</li>
              </ul>
            </section>

            <section className="bg-white/80 backdrop-blur-sm rounded-lg shadow p-6">
              <h2 className="text-xl font-semibold text-gray-900 mb-4">
                Rank Guide
              </h2>
              <ul className="space-y-2 text-gray-600">
                <li className="flex items-center">
                  <span className="w-6 h-6 rounded-full bg-purple-500 text-white flex items-center justify-center mr-2 text-sm">S</span>
                  <span>45+ points - Superhuman</span>
                </li>
                <li className="flex items-center">
                  <span className="w-6 h-6 rounded-full bg-red-500 text-white flex items-center justify-center mr-2 text-sm">A</span>
                  <span>35-44 points - Excellent</span>
                </li>
                <li className="flex items-center">
                  <span className="w-6 h-6 rounded-full bg-blue-500 text-white flex items-center justify-center mr-2 text-sm">B</span>
                  <span>25-34 points - Good</span>
                </li>
                <li className="flex items-center">
                  <span className="w-6 h-6 rounded-full bg-green-500 text-white flex items-center justify-center mr-2 text-sm">C</span>
                  <span>15-24 points - Average</span>
                </li>
                <li className="flex items-center">
                  <span className="w-6 h-6 rounded-full bg-gray-500 text-white flex items-center justify-center mr-2 text-sm">D</span>
                  <span>0-14 points - Need Practice</span>
                </li>
              </ul>
            </section>
          </div>
        </div>
      </main>

      <footer className="bg-white/80 backdrop-blur-sm mt-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <p className="text-center text-gray-500">
            © 2024 Reaction Speed Test | For Entertainment Only
          </p>
        </div>
      </footer>
    </div>
  );
};

export default WebsiteLayout;
